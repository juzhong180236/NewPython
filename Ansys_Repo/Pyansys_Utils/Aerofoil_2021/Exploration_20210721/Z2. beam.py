"""Script generated by ansys-mapdl-core version 0.59.3"""
from ansys.mapdl.core import launch_mapdl
mapdl = launch_mapdl(loglevel="WARNING")
mapdl.run("/batch")
mapdl.run("/config,noeldb,1     ")  # force off writing results to database
mapdl.get("_wallstrt", "active", "", "time", "wall")
# ANSYS input file written by Workbench version 2021 R1
# File used for geometry attach: C:\Users\asus\AppData\Local\Temp\WB_asus_18664_2\wbnew_files\dp0\SYS\DM\SYS.agdb
mapdl.title("wbnew--Static Structural (A5)")
# ****** Begin Custom Load Command Snippet ******
# CT Extensions:
# SDYNA 2021.1
# f463412-bd3e-484b-87e7-cbc0a665e474 wbex
# 
# ****** End   Custom Load Command Snippet ******
mapdl.run("*DIM,_wb_ProjectScratch_dir,string,248")
mapdl.run("_wb_ProjectScratch_dir(1) = 'C:\Users\asus\AppData\Local\Temp\WB_asus_18664_2\_ProjectScratch\Scr3919\'")
mapdl.run("*DIM,_wb_SolverFiles_dir,string,248")
mapdl.run("_wb_SolverFiles_dir(1) = 'C:\Users\asus\AppData\Local\Temp\WB_asus_18664_2\wbnew_files\dp0\SYS\MECH\'")
mapdl.run("*DIM,_wb_userfiles_dir,string,248")
mapdl.run("_wb_userfiles_dir(1) = 'C:\Users\asus\AppData\Local\Temp\WB_asus_18664_2\wbnew_files\user_files\'")
# -- Data in consistent NMM units. See Solving Units in the help system for more information.
mapdl.run("/units,MPA")
mapdl.run("/nopr")
mapdl.run("/wb,file,start              ")  # signify a WB generated input file
mapdl.prep7()
# Turn off shape checking because checks already performed inside WB mesher.
# See help system for more information.
mapdl.shpp("OFF", "", "NOWARN")
mapdl.run("/nolist")
mapdl.run("etcon,set             ")  # allow ANSYS to choose best KEYOP's for 180x elements, resets any applicable keyopt to MAPDL defaults
# ********** Nodes for the whole assembly ***********
mapdl.run("nblock,3,,64")
mapdl.run("(1i9,3e20.9e3)")
mapdl.run("1     0.000000000E+00     0.000000000E+00     0.000000000E+00")
mapdl.run("2     2.802000000E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("3     9.662068966E+00     0.000000000E+00     0.000000000E+00")
mapdl.run("4     1.932413793E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("5     2.898620690E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("6     3.864827586E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("7     4.831034483E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("8     5.797241379E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("9     6.763448276E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("10     7.729655172E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("11     8.695862069E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("12     9.662068966E+01     0.000000000E+00     0.000000000E+00")
mapdl.run("13     1.062827586E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("14     1.159448276E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("15     1.256068966E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("16     1.352689655E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("17     1.449310345E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("18     1.545931034E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("19     1.642551724E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("20     1.739172414E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("21     1.835793103E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("22     1.932413793E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("23     2.029034483E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("24     2.125655172E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("25     2.222275862E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("26     2.318896552E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("27     2.415517241E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("28     2.512137931E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("29     2.608758621E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("30     2.705379310E+02     0.000000000E+00     0.000000000E+00")
mapdl.run("31     4.831034483E+00     0.000000000E+00     9.662068966E+00")
mapdl.run("32     1.449310345E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("33     2.415517241E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("34     3.381724138E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("35     4.347931034E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("36     5.314137931E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("37     6.280344828E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("38     7.246551724E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("39     8.212758621E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("40     9.178965517E+01     0.000000000E+00     9.662068966E+00")
mapdl.run("41     1.014517241E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("42     1.111137931E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("43     1.207758621E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("44     1.304379310E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("45     1.401000000E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("46     1.497620690E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("47     1.594241379E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("48     1.690862069E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("49     1.787482759E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("50     1.884103448E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("51     1.980724138E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("52     2.077344828E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("53     2.173965517E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("54     2.270586207E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("55     2.367206897E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("56     2.463827586E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("57     2.560448276E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("58     2.657068966E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("59     2.753689655E+02     0.000000000E+00     9.662068966E+00")
mapdl.run("-1")
mapdl.run("/wb,elem,start            ")  # set before creation of elements
# ********** Elements for Body 1 'Line Body' ***********
mapdl.et(1, 188)
mapdl.run("keyo,1,3,2")
mapdl.run("eblock,19,solid,,29")
mapdl.run("(19i9)")
mapdl.run("1        1        1        1        0        0        0        0        3        0        1        1        3       31")
mapdl.run("1        1        1        1        0        0        0        0        3        0        2        3        4       32")
mapdl.run("1        1        1        1        0        0        0        0        3        0        3        4        5       33")
mapdl.run("1        1        1        1        0        0        0        0        3        0        4        5        6       34")
mapdl.run("1        1        1        1        0        0        0        0        3        0        5        6        7       35")
mapdl.run("1        1        1        1        0        0        0        0        3        0        6        7        8       36")
mapdl.run("1        1        1        1        0        0        0        0        3        0        7        8        9       37")
mapdl.run("1        1        1        1        0        0        0        0        3        0        8        9       10       38")
mapdl.run("1        1        1        1        0        0        0        0        3        0        9       10       11       39")
mapdl.run("1        1        1        1        0        0        0        0        3        0       10       11       12       40")
mapdl.run("1        1        1        1        0        0        0        0        3        0       11       12       13       41")
mapdl.run("1        1        1        1        0        0        0        0        3        0       12       13       14       42")
mapdl.run("1        1        1        1        0        0        0        0        3        0       13       14       15       43")
mapdl.run("1        1        1        1        0        0        0        0        3        0       14       15       16       44")
mapdl.run("1        1        1        1        0        0        0        0        3        0       15       16       17       45")
mapdl.run("1        1        1        1        0        0        0        0        3        0       16       17       18       46")
mapdl.run("1        1        1        1        0        0        0        0        3        0       17       18       19       47")
mapdl.run("1        1        1        1        0        0        0        0        3        0       18       19       20       48")
mapdl.run("1        1        1        1        0        0        0        0        3        0       19       20       21       49")
mapdl.run("1        1        1        1        0        0        0        0        3        0       20       21       22       50")
mapdl.run("1        1        1        1        0        0        0        0        3        0       21       22       23       51")
mapdl.run("1        1        1        1        0        0        0        0        3        0       22       23       24       52")
mapdl.run("1        1        1        1        0        0        0        0        3        0       23       24       25       53")
mapdl.run("1        1        1        1        0        0        0        0        3        0       24       25       26       54")
mapdl.run("1        1        1        1        0        0        0        0        3        0       25       26       27       55")
mapdl.run("1        1        1        1        0        0        0        0        3        0       26       27       28       56")
mapdl.run("1        1        1        1        0        0        0        0        3        0       27       28       29       57")
mapdl.run("1        1        1        1        0        0        0        0        3        0       28       29       30       58")
mapdl.run("1        1        1        1        0        0        0        0        3        0       29       30        2       59")
mapdl.run("-1")
# Material Id = {6479EE20-29D5-4A2C-AEEF-8843038A2B22}
mapdl.run("/wb,elem,end               ")  # done creating elements
# ********** Send User Defined Coordinate System(s) ***********
mapdl.csys(0)
mapdl.toffst(273.15, "")  # Temperature offset from absolute zero
# ********** Set Reference Temperature ***********
mapdl.tref(22.)
mapdl.run("/wb,mat,start              ")  # starting to send materials
# ********** Send Materials ***********
mapdl.mp("DENS", 1, 2.83e-09, "")  # tonne mm^-3
mapdl.mp("EX", 1, 71000, "")  # tonne s^-2 mm^-1
mapdl.mp("NUXY", 1, 0.33, "")
mapdl.run("/wb,mat,end                ")  # done sending materials
# ********** Send Beam Properties ***********
mapdl.sectype(1, "BEAM", "RECT")
mapdl.secdata(50., 1.15)
mapdl.secoffset("cent")
# ************************* Model Summary ********************
# Line Body,	aerofoil,	matid,	1
# ************************* End Model Summary ********************
# get the diagonal of the bounding box. Needed later for other things
mapdl.get("_xmin", "node", "", "mnloc", "x")
mapdl.get("_ymin", "node", "", "mnloc", "y")
mapdl.get("_zmin", "node", "", "mnloc", "z")
mapdl.get("_xmax", "node", "", "mxloc", "x")
mapdl.get("_ymax", "node", "", "mxloc", "y")
mapdl.get("_zmax", "node", "", "mxloc", "z")
mapdl.run("_ASMDIAG=(_xmax-_xmin)*(_xmax-_xmin)+(_ymax-_ymin)*(_ymax-_ymin)+(_zmax-_zmin)*(_zmax-_zmin)")
mapdl.run("_ASMDIAG=SQRT(_ASMDIAG)")
mapdl.run("/wb,contact,start          ")  # starting to send contact
mapdl.run("/wb,contact,end            ")  # done creating contacts
mapdl.run("/golist")
mapdl.run("/wb,load,start             ")  # starting to send loads
# ********** Fixed Supports ***********
mapdl.run("CMBLOCK,_FIXEDSU,NODE,        1")
mapdl.run("(8i10)")
mapdl.run("1")
mapdl.cmsel("s", "_FIXEDSU")
mapdl.d("all", "all")
mapdl.nsel("all")
# ********** Create Displacement Tables and Functions ******
mapdl.run("*DIM,_loadvari35zp,TABLE,2,1,1,TIME,")
# Time values
mapdl.run("_loadvari35zp(1,0,1) = 0.")
mapdl.run("_loadvari35zp(2,0,1) = 1.")
# Load values
mapdl.run("_loadvari35zp(1,1,1) = 0.")
mapdl.run("_loadvari35zp(2,1,1) = 80.")
mapdl.run("*DIM,_loadvari35zn,TABLE,2,1,1,TIME,")
# Time values
mapdl.run("_loadvari35zn(1,0,1) = 0.")
mapdl.run("_loadvari35zn(2,0,1) = 1.")
# Load values
mapdl.run("_loadvari35zn(1,1,1) = 0.")
mapdl.run("_loadvari35zn(2,1,1) = -80.")
mapdl.run("/gst,on,on")
mapdl.run("fini")
mapdl.get("_numnode", "node", 0, "count")
mapdl.get("_numelem", "elem", 0, "count")
mapdl.get("_MAXELEMNUM", "elem", 0, "NUM", "MAX")
mapdl.get("_MAXNODENUM", "node", 0, "NUM", "MAX")
mapdl.get("_MAXELEMTYPE", "etyp", 0, "NUM", "MAX")
mapdl.get("_MAXREALCONST", "real", 0, "NUM", "MAX")
mapdl.run("/go")
mapdl.run("/wb,load,end               ")  # done creating loads
# -- Number of total nodes = %_numnode%
# -- Number of contact elements = 0
# -- Number of spring elements = 0
# -- Number of bearing elements = 0
# -- Number of solid elements = 29
# -- Number of condensed parts = 0
# -- Number of total elements = %_numelem%
mapdl.get("_wallbsol", "active", "", "time", "wall")
# ***************************************************************************
# ************************    SOLUTION       ********************************
# ***************************************************************************
mapdl.run("/solu")
mapdl.antype(0)  # static analysis
mapdl.nlgeom("on")  # Turn on Large Deformation Effects
mapdl.run("_thickRatio=  0     ")  # Ratio of thick parts in the model
mapdl.run("eqsl,sparse,,,,,1")
mapdl.cntr("print", 1)  # print out contact info and also make no initial contact an error
mapdl.dmpoption("emat", "no")  # Don't combine emat file for DANSYS
mapdl.dmpoption("esav", "no")  # Don't combine esav file for DANSYS
mapdl.nldiag("cont", "iter")  # print out contact info each equilibrium iteration
mapdl.rescontrol("define", "last", "last", "", "dele")  # Program Controlled
# ***************************************************
# ****************** SOLVE FOR LS 1 OF 1 ****************
# ** Set Displacements ***
mapdl.run("CMBLOCK,_CM35UZ_ZP,NODE,        1")
mapdl.run("(8i10)")
mapdl.run("2")
mapdl.cmsel("s", "_CM35UZ_ZP")
mapdl.d("all", "uz", "%_loadvari35zp%")
mapdl.nsel("all")
# ** Component For All Non-Zero UZ Displacements ***
mapdl.cmsel("s", "_CM35uz_zp")
mapdl.cm("_DISPNONZEROUZ", "NODE")
mapdl.nsel("all")
mapdl.run("/nopr")
mapdl.run("/gopr")
mapdl.run("/nolist")
mapdl.autots("on")  # Workbench Program Controlled automatic time stepping
mapdl.run("nsub,1,10,1                ")  # due to presence of general nonlinear
mapdl.time(1.)
mapdl.outres("erase")
mapdl.outres("all", "none")
mapdl.outres("nsol", "all", "")
mapdl.outres("rsol", "all")
mapdl.outres("eangl", "all")
mapdl.outres("etmp", "all")
mapdl.outres("veng", "all")
mapdl.outres("strs", "all", "")
mapdl.outres("epel", "all", "")
mapdl.outres("eppl", "all", "")
mapdl.outres("cont", "all", "")
mapdl.run("/nopr")
mapdl.esel("s", "type", "", 1)
mapdl.cm("_elmisc", "elem")
mapdl.esel("all")
mapdl.run("/gopr")
mapdl.outres("misc", "all", "_elmisc")
# *********** WB SOLVE COMMAND ***********
# check interactive state
mapdl.get("ANSINTER_", "active", "", "int")
with mapdl.non_interactive:
    mapdl.run("*if,ANSINTER_,ne,0,then")
    mapdl.run("/eof")
    mapdl.run("*endif")
    mapdl.solve()
    # 
    mapdl.run("CEWRITE,file,ce,,INTE")
    # ***************************************************
    # ************** FINISHED SOLVE FOR LS 1 *************
    mapdl.get("_wallasol", "active", "", "time", "wall")
    mapdl.run("/nopr")
    mapdl.get("_numnode", "node", 0, "count")
    mapdl.get("_numelem", "elem", 0, "count")
    mapdl.get("_MAXELEMNUM", "elem", 0, "NUM", "MAX")
    mapdl.get("_MAXNODENUM", "node", 0, "NUM", "MAX", "", "", "INTERNAL")
    mapdl.get("_MAXELEMTYPE", "etyp", 0, "NUM", "MAX")
    mapdl.get("_MAXREALCONST", "real", 0, "NUM", "MAX")
    mapdl.run("/gopr")
    mapdl.run("/post1")
    mapdl.run("xmlo,ENCODING,ISO-8859-1")
    mapdl.run("xmlo,parm")
    mapdl.run("/xml,parm,xml")
    mapdl.run("fini")
    mapdl.run("/gopr")
    mapdl.get("_walldone", "active", "", "time", "wall")
    mapdl.run("_preptime=(_wallbsol-_wallstrt)*3600")
    mapdl.run("_solvtime=(_wallasol-_wallbsol)*3600")
    mapdl.run("_posttime=(_walldone-_wallasol)*3600")
    mapdl.run("_totaltim=(_walldone-_wallstrt)*3600")
    mapdl.get("_dlbratio", "active", 0, "solu", "dlbr")
    mapdl.get("_combtime", "active", 0, "solu", "comb")
    # -- Total number of nodes = %_numnode%
    # -- Total number of elements = %_numelem%
    # -- Element load balance ratio = %_dlbratio%
    # -- Time to combine distributed files = %_combtime%
    mapdl.run("/wb,file,end               ")  # done with WB generated input
mapdl.exit()