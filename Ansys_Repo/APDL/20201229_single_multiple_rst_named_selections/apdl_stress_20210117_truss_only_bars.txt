!直接通过结果文件导出equivalent stress
FINISH
/CLEAR
/NOPR

bar_quantity=11

*DIM,path_write,STRING,128,1
*DIM,path_read,STRING,128,1
*DIM,str_named_selection,STRING,128,bar_quantity

!样本点，节点编号，坐标系
! 0 总坐标系，12开始自定义坐标
sys_num = 0

path_write(1,1)='C:\Users\asus\Desktop\bars_data\'
!有几个file.rst文件，就将path_read设为几维数组
path_read(1,1)='F:\Truss2\20200905_files\dp0\SYS-13\MECH\file'

str_named_selection(1,1)='G1'
str_named_selection(1,2)='G2'
str_named_selection(1,3)='G3'
str_named_selection(1,4)='G4'
str_named_selection(1,5)='G5'
str_named_selection(1,6)='G6'
str_named_selection(1,7)='G7'
str_named_selection(1,8)='G8'
str_named_selection(1,9)='G9'
str_named_selection(1,10)='G10'
str_named_selection(1,11)='G11'

! 外循环次数，也就是rst文件的个数
outter_cycle_times=1
! 内循环次数，随便设一个值，也就是每个rst文件中的子步数目，会在外循环中根据实际的子步数目动态更改。
inner_cycle_times=17

/POST1
/MKDIR,path_write(1,1)
/CWD,path_write(1,1)
!最外层循环是对.rst结果文件的循环
file_name_middle='_'

*DO,s,1,outter_cycle_times,1

    FILE,path_read(1,s),'rst'
    INRES,ALL
    file_name_out=CHRVAL(s)

    *DO,j,1,inner_cycle_times,1
        SET,j
        *IF,j,EQ,1,THEN
            *DO,n,1,2,1
               *IF,n,EQ,1,THEN
                  file_name=CHRVAL(0)
                  *CFOPEN,%file_name%,txt
               *ELSE
                  file_name=CHRVAL(1)
                  *CFOPEN,%file_name_out%%file_name_middle%%file_name%,txt
               *ENDIF
               *DO,count,1,bar_quantity,1
                    *IF,count,EQ,4,THEN
                       sys_num=12
                    *ELSEIF,count,EQ,8
                       sys_num=12
                    *ELSEIF,count,EQ,6
                       sys_num=13
                    *ELSE
                       sys_num=0
                    *ENDIF
                    CSYS,sys_num
                  !通过CMSEL选择定义的元件 CMSEL在单向选择很有用
                  CMSEL,S,str_named_selection(1,count)
                  NSLE,R,CORNER
                  *GET,node_num_min,ELEM,,NUM,MIN
                  str_n_s=str_named_selection(1,count)
                  *GET,node_count,NODE,0,COUNT
                  *IF,count,NE,1,THEN
                     *VWRITE,'C'
                     (A1)
                  *ENDIF
                   *DO,i,1,node_count,1
                      n_coord_x = NX(node_num_min)
                      n_coord_y = NY(node_num_min)
                      n_coord_z = NZ(node_num_min)
                     *GET,s_eqv,NODE,node_num_min,S,EQV
                     *VWRITE,CHRVAL(node_num_min),n_coord_x,n_coord_y,n_coord_z,s_eqv
                     (A9,E16.8,E16.8,E16.8,E16.8)
                     node_num_min=NDNEXT(node_num_min)
                  *ENDDO
               *ENDDO
            *ENDDO
        *ELSE
            file_name=CHRVAL(j)
            *CFOPEN,%file_name_out%%file_name_middle%%file_name%,txt
            *DO,count,1,bar_quantity,1
                *IF,count,EQ,4,THEN
                   sys_num=12
                *ELSEIF,count,EQ,8
                   sys_num=12
                *ELSEIF,count,EQ,6
                   sys_num=13
                *ELSE
                   sys_num=0
                *ENDIF
                CSYS,sys_num
               !通过CMSEL选择定义的元件 CMSEL在单向选择很有用
               CMSEL,S,str_named_selection(1,count)
                NSLE,R,CORNER
                  *GET,node_num_min,NODE,,NUM,MIN
                  *GET,node_count,NODE,0,COUNT
                  *IF,count,NE,1,THEN
                     *VWRITE,'C'
                     (A1)
                  *ENDIF
                  *DO,i,1,node_count,1
                      n_coord_x = NX(node_num_min)
                      n_coord_y = NY(node_num_min)
                      n_coord_z = NZ(node_num_min)
                     *GET,s_eqv,NODE,node_num_min,S,EQV
                     *VWRITE,CHRVAL(node_num_min),n_coord_x,n_coord_y,n_coord_z,s_eqv
                     (A9,E16.8,E16.8,E16.8,E16.8)
                     node_num_min=NDNEXT(node_num_min)
                  *ENDDO
            *ENDDO
        *ENDIF
        *CFCLOSE
    *ENDDO
*ENDDO
/GOPR
FINISH
/CLEAR
/DELETE,file,page
/DELETE,RPCRequestTmp,out
/DELETE,CHRVAL(0),txt
!/EOF